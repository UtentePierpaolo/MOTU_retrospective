"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
rm(list=ls())
gc()
# load packages and functions
require(lme4)
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/f_univariate_associations.R")
# require(readxl)
# load data
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
# MCMCglmm(fixed=KneeCategory~Age, family="categorical", data=dfr)
dfr$kc0 <- dfr$KneeCategory == 0
dfr$kc1 <- dfr$KneeCategory == 1
dfr$kc2 <- dfr$KneeCategory == 2
dfr$kc3 <- dfr$KneeCategory == 3
for(cvarx in varx){
if(is.numeric(dfr[,cvarx])){
dfr[,cvarx] <- dfr[,cvarx]-mean(dfr[,cvarx])
}
}
dfOR0 <- f_univariate_associations(y="kc0", xs=varx, modelf="logistic", dfm=dfr)
head(dfr$logTimeFromAmputation)
sum(!is.na(dfr$logTimeFromAmputation))
sum(!is.na(dfr$TimeFromAmputation))
head(dfr$TimeFromAmputation)
class(dfr$TimeFromAmputation)
class(dfr$logTimeFromAmputation)
head(dfr$logTimeFromAmputation)
log(dfr$TimeFromAmputation)
sum(!is.na(dfr$logTimeFromAmputation))
rm(list=ls())
rm(list=ls())
gc()
# load packages and functions
require(lme4)
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/f_univariate_associations.R")
# load data
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
head(dfr$TimeFromAmputation)
sum(!is.na(dfr$TimeFromAmputation))
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
sum(!is.na(dfr$logTimeFromAmputation))
head(dfr$logTimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
dfr$kc0 <- dfr$KneeCategory == 0
dfr$kc1 <- dfr$KneeCategory == 1
dfr$kc2 <- dfr$KneeCategory == 2
dfr$kc3 <- dfr$KneeCategory == 3
for(cvarx in varx){
if(is.numeric(dfr[,cvarx])){
dfr[,cvarx] <- dfr[,cvarx]-mean(dfr[,cvarx], na.rm=T)
}
}
dfOR0 <- f_univariate_associations(y="kc0", xs=varx, modelf="logistic", dfm=dfr)
View(dfOR0)
dfOR1 <- f_univariate_associations(y="kc1", xs=varx, modelf="logistic", dfm=dfr)
dfOR2 <- f_univariate_associations(y="kc2", xs=varx, modelf="logistic", dfm=dfr)
dfOR3 <- f_univariate_associations(y="kc3", xs=varx, modelf="logistic", dfm=dfr)
dfr[,c("RehabGoal","kc1")]
table(dfr[,c("RehabGoal","kc1")])
table(dfr[,c("RehabGoal","kc2")])
table(dfr[,c("RehabGoal","kc3")])
table(dfr[,c("klevel","kc1")])
table(dfr[,c("kLevel","kc1")])
table(dfr[,c("KlevelAdmission","kc1")])
rm(list=ls())
gc()
# load packages and functions
require(lme4)
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/f_univariate_associations.R")
# load data
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
dfr$kc0 <- dfr$KneeCategory == 0
dfr$kc1 <- dfr$KneeCategory == 1
dfr$kc2 <- dfr$KneeCategory == 2
dfr$kc3 <- dfr$KneeCategory == 3
for(cvarx in varx){
if(is.numeric(dfr[,cvarx])){
dfr[,cvarx] <- dfr[,cvarx]-mean(dfr[,cvarx], na.rm=T)
}
}
dfOR0 <- f_univariate_associations(y="kc0", xs=varx, modelf="logistic", dfm=dfr)
rm(list=ls())
gc()
# load packages and functions
require(lme4)
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/f_univariate_associations.R")
# load data
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
dfr$kc0 <- dfr$KneeCategory == 0
dfr$kc1 <- dfr$KneeCategory == 1
dfr$kc2 <- dfr$KneeCategory == 2
dfr$kc3 <- dfr$KneeCategory == 3
for(cvarx in varx){
if(is.numeric(dfr[,cvarx])){
dfr[,cvarx] <- dfr[,cvarx]-mean(dfr[,cvarx], na.rm=T)
}
}
dfOR0 <- f_univariate_associations(y="kc0", xs=varx, modelf="logistic", dfm=dfr)
dfOR1 <- f_univariate_associations(y="kc1", xs=varx, modelf="logistic", dfm=dfr)
dfOR2 <- f_univariate_associations(y="kc2", xs=varx, modelf="logistic", dfm=dfr)
dfOR3 <- f_univariate_associations(y="kc3", xs=varx, modelf="logistic", dfm=dfr)
View(dfOR0)
View(dfOR1)
rm(list=ls())
rm(list=ls())
gc()
# load functions
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/f_univariate_associations_xz.R")
# load data
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
dfr$kc0 <- dfr$KneeCategory == 0
dfr$kc1 <- dfr$KneeCategory == 1
dfr$kc2 <- dfr$KneeCategory == 2
dfr$kc3 <- dfr$KneeCategory == 3
dfOR0 <- f_univariate_associations_xz(y="kc0", xs=varx, modelf="logistic", dfm=dfr)
dfOR1 <- f_univariate_associations_xz(y="kc1", xs=varx, modelf="logistic", dfm=dfr)
dfOR2 <- f_univariate_associations_xz(y="kc2", xs=varx, modelf="logistic", dfm=dfr)
dfOR3 <- f_univariate_associations_xz(y="kc3", xs=varx, modelf="logistic", dfm=dfr)
dfOR0 <- f_univariate_associations_xz(y="kc0", xs=varx, dfm=dfr) # modelf="logistic",
dfOR1 <- f_univariate_associations_xz(y="kc1", xs=varx, dfm=dfr)
dfOR2 <- f_univariate_associations_xz(y="kc2", xs=varx, dfm=dfr)
dfOR3 <- f_univariate_associations_xz(y="kc3", xs=varx, dfm=dfr)
lOR <- list(dfOR0,dfOR1,dfOR2,dfOR3)
rm(list=ls())
gc()
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/association_xz.R")
# load data
# https://figshare.com/s/c84ae0d82a3e053ab668
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing------------------------------
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
# associations between patient characteristics (x) and knee category (z)
lOR <- association_xz(dfr, varx)
names(lOR)
length(lOR)
rm(list=ls())
gc()
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/association_xz.R")
# load data
# https://figshare.com/s/c84ae0d82a3e053ab668
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing------------------------------
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
# associations between patient characteristics (x) and knee category (z)
lOR <- association_xz(dfr, varx)
View(lOR[["0"]])
rm(list=ls())
gc()
source("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective/association_xz.R")
# load data
# https://figshare.com/s/c84ae0d82a3e053ab668
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_28102020.csv")
# pre-processing------------------------------
vdates <- c("AdmissionDate","AmputationDate")
for(cvdate in vdates){
dfr[,cvdate] <- as.Date(dfr[,cvdate], format="%Y-%m-%d")
}
dfr$TimeFromAmputation <- as.numeric(dfr$AdmissionDate - dfr$AmputationDate)
dfr$logTimeFromAmputation <- log(dfr$TimeFromAmputation)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
# associations between patient characteristics (x) and knee category (z)
lOR <- association_xz(dfr, varx)
View(lOR[["0"]])
View(lOR[["1"]])
View(lOR[["2"]])
View(lOR[["3"]])
rm(list=ls())
gc()
setwd("C:/Users/Pierpaolo/OneDrive - Alma Mater Studiorum Università di Bologna/MOTU/retrospective study/Code/MOTU_retrospective")
source("preprocessing.R")
source("table_ExposureOutcome.R")
source("association_xz.R")
source("constructPropensityScore_gbm.R")
source("f_univariate_associations.R")
# load data
# old version: https://figshare.com/s/c84ae0d82a3e053ab668
dfr <- read.csv("D:/MOTU/retrospective study data/Data/AnonymisedData_04112020.csv")
dfr <- preprocessing(dfr)
varx <- c("Age","Sex","ThirdPayer","FirstdeliveryRenewal","RehabGoal",
"logTimeFromAmputation","AmputationSide","AmputationCause","StumpLength",
"nComorbidities",
"nDrugs","DrugAntipsychotics","DrugAntidepressants","DrugBenzodiazepines","DrugLoopDiuretics",
"DrugBetaBlockingAgents","DrugOpioids","DrugAntiepileptics",
"PainAverage",
"LCIInitialScore",
"AMPAdmissionScore","KlevelAdmission",
"MorseAdmissionTotalScore",
"TWTInitialTime_m", "BarthelAdmissionTotalScore")
# univariate associations between patient characteristics (x) and knee category (z)
lOR <- association_xz(dfr, varx)
# PS construction
varps <- c("FirstdeliveryRenewal","logTimeFromAmputation","nComorbidities","nDrugs",
"DrugAntidepressants","DrugAntiepileptics","ThirdPayer")
# lPS <- constructPropensityScore(dfm=dfr, varps=varps)
lPS <- constructPropensityScore_gbm(dfr=dfr, varps=varps)
dfr <- lPS$psdata
# Table 2. Rehabilitation stays, patients and time at risk, and falls according to knee category
lExposureOutcome <- table_ExposureOutcome(dfm=dfr)
dfm=dfr
require(lme4)
require(survey)
nmin = 5 # minimum number of falls to calculate falls rate in a group
# treat NA on KneeCategory as a group
ckc <- levels(dfm$KneeCategory)
dfm$KneeCategory <- factor(dfm$KneeCategory, exclude = "")
ckc <- c(ckc, "NA")
dfm$one <- 1
dfskc <- data.frame( # number of HS for each knee category
KneeCategory = ckc,
NumberHospitalStays = aggregate(one  ~ KneeCategory, data=dfm, FUN=sum)[,"one"],
# number of different patients for each knee category
NumberPatients = aggregate(one  ~ KneeCategory, data=unique(dfm[,c("AnonymousID","KneeCategory","one")]), FUN=sum)[,"one"],
# number of hospital days for each knee category
NumberHospitalDays= aggregate(LengthOfStay ~ KneeCategory, data=dfm, FUN=sum)[,"LengthOfStay"],
# falls
NumberAnyFall = aggregate(NumberAnyFall ~ KneeCategory, data=dfm, FUN=sum)[,"NumberAnyFall"],
NumberFallsWithProsthesis = aggregate(NumberFallsWithProsthesis ~ KneeCategory, data=dfm, FUN=sum)[,"NumberFallsWithProsthesis"],
NumberFallsWithoutProsthesis = aggregate(NumberFallsWithoutProsthesis ~ KneeCategory, data=dfm, FUN=sum)[,"NumberFallsWithoutProsthesis"])
row.names(dfskc) <- dfskc$KneeCategory
# stop considering NA as a KneeCategory
dfm$KneeCategory <- factor(dfm$KneeCategory, exclude =NA)
voutcome <- c("NumberAnyFall","NumberFallsWithProsthesis","NumberFallsWithoutProsthesis")
vformula_all <- paste(voutcome, " ~ offset(log(LengthOfStay)) + (1|AnonymousID)")
vformula0 <- paste(voutcome, " ~ -1 + offset(log(LengthOfStay)) + KneeCategory + (1|AnonymousID)")
vformula1 <- paste(voutcome, " ~ offset(log(LengthOfStay)) + KneeCategory + (1|AnonymousID)")
vaformula <- paste(voutcome, " ~ KneeCategory")
lmodel_all <- list()
lmodel0 <- list()
lmodel1 <- list()
lanova <- list()
for (ind in 1:length(voutcome)){
# model on all HS
lmodel_all[[ind]] <- glmer(vformula_all[ind], data=dfm, family=poisson(link="log"), nAGQ=20)
# if on some knee category there are less than nmin(=5) falls, exclude that category
adfm <- aggregate(as.formula(vaformula[ind]), data=dfm, FUN=sum)
# knee category to exclude from the analyses
kcte <- adfm[adfm[,voutcome[ind]] < nmin, "KneeCategory"]
cdfm <- droplevels(dfm[!(dfm$KneeCategory %in% kcte),])
lmodel0[[ind]] <- glmer(vformula0[ind], data=cdfm, family = poisson(link = "log"), nAGQ = 20)
lmodel1[[ind]] <- glmer(vformula1[ind], data=cdfm, family = poisson(link = "log"), nAGQ = 20)
lanova[[ind]] <- Anova(lmodel1[[ind]])
}
names(lmodel_all) <- voutcome
names(lmodel0) <- voutcome
names(lmodel1) <- voutcome
names(lanova) <- voutcome
# if on some knee category there are less than nmin(=5) falls, exclude that category
adfm <- aggregate(as.formula(vaformula[ind]), data=dfm, FUN=sum)
View(adfm)
# knee category to exclude from the analyses
kcte <- adfm[adfm[,voutcome[ind]] < nmin, "KneeCategory"]
kcte
cdfm <- droplevels(dfm[!(dfm$KneeCategory %in% kcte),])
"LK" %in% names(cdfm)
vaformula[ind]
voutcome[ind]
# if on some knee category there are less than nmin(=5) falls, exclude that category
adfm <- aggregate(as.formula("NumberFallsWithProsthesis  ~ KneeCategory"), data=dfm, FUN=sum)
# knee category to exclude from the analyses
kcte <- adfm[adfm[,"NumberFallsWithProsthesis"] < nmin, "KneeCategory"]
kcte
cdfm <- droplevels(dfm[!(dfm$KneeCategory %in% kcte),])
cdfm$LK <- cdfm$KneeCategory %in% "LK"
cdfm$AMK <- cdfm$KneeCategory %in% "AMK"
cdfm$FK <- cdfm$KneeCategory %in% "FK"
cdfm$MPK <- cdfm$KneeCategory %in% "MPK"
dsd <- svydesign(id= ~ 1, weights= ~ w, data=cdfm)
table(cdfm[is.na(cdfm$w),c("NumberFallsWithProsthesis","KneeCategory")])
cdfm[is.na(cdfm$w),c("NumberFallsWithProsthesis","KneeCategory")]
# drop where there is no information on knee category
cdfm <- cdfm[!is.na(cdfm$KneeCategory),]
cdfm$LK <- cdfm$KneeCategory %in% "LK"
cdfm$AMK <- cdfm$KneeCategory %in% "AMK"
cdfm$FK <- cdfm$KneeCategory %in% "FK"
cdfm$MPK <- cdfm$KneeCategory %in% "MPK"
dsd <- svydesign(id= ~ 1, weights= ~ w, data=cdfm)
?svyglm
ates <- svyglm(NumberFallsWithProsthesis ~ AMK+FK+MPK, design=dsd)
ates
summary(ates)
ates <- svyglm(NumberFallsWithProsthesis ~ offset(log(LengthOfStay)) + AMK+FK+MPK,
design=dsd, family=quasipoisson())
summary(ates)
ates <- svyglm(NumberFallsWithProsthesis ~ offset(log(LengthOfStay)) + AMK+LK+MPK,
design=dsd, family=quasipoisson())
summary(ates)
ate_FK_AMK <- data.frame(svycontrast(ates, quote(FK - AMK)))
ates <- svyglm(NumberFallsWithProsthesis ~ offset(log(LengthOfStay)) + AMK+FK+MPK,
design=dsd, family=quasipoisson())
ate_FK_AMK <- data.frame(svycontrast(ates, quote(FK - AMK)))
quote
?quote
quote(FK - AMK)
svycontrast(ates, quote(FK - AMK))
?svycontrast
class(ates)
summary(ates)
cdfm$LK <- (cdfm$KneeCategory %in% "LK")*1
cdfm$AMK <- (cdfm$KneeCategory %in% "AMK")*1
cdfm$FK <- (cdfm$KneeCategory %in% "FK")*1
cdfm$MPK <- (cdfm$KneeCategory %in% "MPK")*
dsd <- svydesign(id= ~ 1, weights= ~ w, data=cdfm)
cdfm$MPK <- (cdfm$KneeCategory %in% "MPK")*1
dsd <- svydesign(id= ~ 1, weights= ~ w, data=cdfm)
ates <- svyglm(NumberFallsWithProsthesis ~ offset(log(LengthOfStay)) + AMK+FK+MPK,
design=dsd, family=quasipoisson())
ate_FK_AMK <- data.frame(svycontrast(ates, quote(FK - AMK)))
ate_FK_AMK
names(ate_FK_AMK) <- c("Estimate", "Std. Error")
ate_FK_AMK
ate_FK_AMK$"t value" <- ate_FK_AMK$Estimate/ate_FK_AMK$"Std. Error"
ate_FK_AMK$"Pr(>|t|)" <- 2*(1-pt(abs(ate_FK_AMK$"t value"),
df=summary(ates)$df.residual))
ate_FK_AMK
ate_FK_AMK <- data.frame(svycontrast(ates, quote(FK - MPK)))
names(ate_FK_AMK) <- c("Estimate", "Std. Error")
ate_FK_AMK$"t value" <- ate_FK_AMK$Estimate/ate_FK_AMK$"Std. Error"
ate_FK_AMK$"Pr(>|t|)" <- 2*(1-pt(abs(ate_FK_AMK$"t value"),
df=summary(ates)$df.residual))
ate_FK_AMK
ates_all <- rbind(summary(ates)$coef[-1,], ate_FK_AMK)
rownames(ates_all) <- c("MET/CBT-5 vs. community",
"SCY vs. community", "MET/CBT-5 vs. SCY")
ates_all
rownames(ates_all) <- c("AMK vs. LK",
"FK vs. LK", "MPK vs. LK", "FK vs. AMK")
ates_all
## Estimate the means. ##
## The intercept estimates the mean for LK ##
com_mean <- summary(ates)$coef[1,]
com_mean
exp(com_mean)*1000
com_mean
list("MET/CBT-5"=c(1,1,0), SCY=c(1,0,1))
pop_means <- data.frame(svycontrast(ates,list(AMK=c(1,1,0,0), FK=c(1,0,1,0), MPK=c(1,0,0,1))))
pop_means
names(pop_means) <- c("Estimate", "Std. Error")
pop_means$"t value" <- pop_means$Estimate/pop_means$"Std. Error"
pop_means$"Pr(>|t|)" <- 2*(1-pt(abs(pop_means$"t value"),
df=summary(ates)$df.residual))
## Combine all three means. ##
pop_means <- rbind(community=com_mean, pop_means)
pop_means
pop_means <- data.frame(svycontrast(ates,list(AMK=c(1,1,0,0), FK=c(1,0,1,0), MPK=c(1,0,0,1))))
names(pop_means) <- c("Estimate", "Std. Error")
pop_means$"t value" <- pop_means$Estimate/pop_means$"Std. Error"
pop_means$"Pr(>|t|)" <- 2*(1-pt(abs(pop_means$"t value"),
df=summary(ates)$df.residual))
## Combine all three means. ##
pop_means <- rbind(LK=com_mean, pop_means)
pop_means
?glht
?confint
require(multcomp)
?glht
names(lmodel1)
wht <- glht(lmodel1[["NumberFallsWithProsthesis"]], linfct = mcp(KneeCategory = "Tukey"))
summary(wht)
fcg(confint(wht), cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
fcg
# require(pbkrtest), require(lmerTest) ?????
source("C:/Users/Pierpaolo/Dropbox/R/MOTU/responsescale_plotconfintglht.R")
fcg
fcg(confint(wht), cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
fcg(confint(wht))
plot(confint(wht))
plot(confint(wht))
multcomp:::plot.confint.glht(wht)
multcomp:::plot.confint.glht(confint(wht))
multcomp:::plot.confint.glht(confint(wht))
wht <- glht(lmodel1[["NumberFallsWithProsthesis"]], linfct = mcp(KneeCategory = "Tukey"))
summary(wht)
class(ates)
?glht
glht(ates)
summary(wht)
?mcp
mcp(dfr$KneeCategory="Tukey")
mcp(KneeCategory="Tukey")
ates2 <- svyglm(NumberFallsWithProsthesis ~ offset(log(LengthOfStay)) + KneeCategory,
design=dsd, family=quasipoisson())
wht2 <-  glht(ates2, linfct = mcp(KneeCategory = "Tukey"))
plot.confint.glht(wht2)
multcomp:::plot.confint.glht(wht2)
